name: Build and Release Radarr

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'  # Runs daily at 3 AM UTC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ncsufan8628/radarr
          token: ${{ secrets.PA_TOKEN }}
          fetch-depth: 0
          submodules: recursive

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-8.0 jq musl-dev gcc g++ make libssl-dev
          dotnet --version

      - name: Build Radarr
        run: |
          git submodule update --init --recursive
          chmod +x build.sh
          ./build.sh --target=linux-musl-x64 2>&1 | tee build_output.log || {
            echo "‚ùå Build failed! Dumping logs:"
            cat build_output.log
            exit 1
          }

      - name: Show Build Logs on Failure
        if: failure()
        run: cat build_output.log

      - name: Debug Directory Structure
        run: |
          echo "üîç Listing all files after build:"
          find . -type f | sort

      - name: Find Build Output
        run: |
          OUTPUT_DIR=$(find ./bin -type d -name "publish" | head -n 1)
          if [ -z "$OUTPUT_DIR" ]; then
            echo "‚ùå No publish directory found!"
            echo "üìÇ Debugging: Listing full directory structure"
            find . | sort
            exit 1
          fi
          echo "‚úÖ Found build output at: $OUTPUT_DIR"
          echo "OUTPUT_PATH=$OUTPUT_DIR" >> $GITHUB_ENV

      - name: Archive Build Artifacts
        run: |
          if [ -d "$OUTPUT_PATH" ]; then
            tar -czvf radarr-linux-musl-x64.tar.gz -C "$OUTPUT_PATH" .
          else
            echo "‚ùå No valid output directory found!"
            exit 1
          fi

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: radarr-linux-musl-x64
          path: radarr-linux-musl-x64.tar.gz

      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          files: radarr-linux-musl-x64.tar.gz
          token: ${{ secrets.PA_TOKEN }}
          tag_name: "nightly-${{ github.run_id }}"
          name: "Nightly Build ${{ github.run_id }}"
          body: "Automated nightly build of Radarr."
          draft: false
          prerelease: true
