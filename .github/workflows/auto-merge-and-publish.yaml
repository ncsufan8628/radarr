name: Sync, Build, and Release Radarr

on:
  schedule:
    - cron: '0 3 * * *'  # Runs daily at 3 AM UTC
  workflow_dispatch:  # Allows manual trigger

jobs:
  sync_and_merge:
    runs-on: ubuntu-latest

    steps:
      - name: Debug Token Availability
        run: |
          if [ -z "${{ secrets.PA_TOKEN }}" ]; then
            echo "❌ PA_TOKEN is NOT set!"
            exit 1
          else
            echo "✅ PA_TOKEN is set!"
          fi

      - name: Checkout Your Fork
        uses: actions/checkout@v4
        with:
          repository: ncsufan8628/radarr
          token: ${{ secrets.PA_TOKEN }}
          fetch-depth: 0

      - name: Set Git Identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Add Radarr Upstream
        run: |
          git remote add upstream https://x-access-token:${{ secrets.PA_TOKEN }}@github.com/Radarr/Radarr.git
          git fetch upstream

      - name: Sync with Latest Radarr Master
        run: |
          git fetch --all
          git checkout -B master origin/master
          git merge --ff-only upstream/master || echo "Merge conflicts detected"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.PA_TOKEN }}

      - name: Merge Fix Branch (PR #9820)
        run: |
          git fetch upstream pull/9820/head:fix-remux-wrong-detection
          git merge fix-remux-wrong-detection --no-edit || echo "Merge conflicts detected"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.PA_TOKEN }}

  build_and_release:
    needs: sync_and_merge
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Updated Code
        uses: actions/checkout@v4
        with:
          repository: ncsufan8628/radarr
          token: ${{ secrets.PA_TOKEN }}
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-6.0 jq

      - name: Build Radarr
        run: |
          git submodule update --init --recursive
          echo "🔍 Running build script..."
          chmod +x build.sh
          
          # Run build script & capture output in a log file
          ./build.sh --target=linux-musl-x64 > build_output.log 2>&1 || {
            echo "❌ Build failed! Dumping logs:"
            cat build_output.log
            exit 1
          }

      - name: Show Build Logs (If Build Fails)
        if: failure()
        run: cat build_output.log


      - name: Show Build Logs (If Build Fails)
        if: failure()
        run: cat build_output.log

      - name: Locate Build Output
        run: |
          OUTPUT_DIR=$(find ./bin -type d -name "publish" | head -n 1)
          if [ -z "$OUTPUT_DIR" ]; then
            echo "❌ No publish directory found!"
            exit 1
          fi
          echo "✅ Found output at: $OUTPUT_DIR"
          echo "OUTPUT_PATH=$OUTPUT_DIR" >> $GITHUB_ENV

      - name: Package Radarr for Release
        run: |
          RELEASE_NAME="radarr-$(date +%Y%m%d-%H%M%S)"
          tar -czvf $RELEASE_NAME.tar.gz -C "$OUTPUT_PATH" .
          echo "RELEASE_FILE=$RELEASE_NAME.tar.gz" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.RELEASE_FILE }}
          tag_name: "radarr-build-${{ github.run_id }}"
          name: "Radarr Build - ${{ github.run_id }}"
          body: "Automated build of Radarr including PR #9820"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
