name: Sync, Merge Fix, and Publish Radarr

on:
  schedule:
    - cron: '0 3 * * *' # Runs daily at 3 AM UTC
  workflow_dispatch: # Allows manual trigger

jobs:
  sync_and_merge:
    runs-on: ubuntu-latest

    steps:
      - name: Debug Token Availability
        run: |
          if [ -z "${{ secrets.PA_TOKEN }}" ]; then
            echo "❌ PA_TOKEN is NOT set!"
            exit 1
          else
            echo "✅ PA_TOKEN is set!"
          fi

      - name: Checkout Your Fork
        uses: actions/checkout@v4
        with:
          repository: ncsufan8628/radarr
          token: ${{ secrets.PA_TOKEN }}
          fetch-depth: 0

      - name: Set Git Identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Add Radarr Upstream
        run: |
          git remote add upstream https://x-access-token:${{ secrets.PA_TOKEN }}@github.com/Radarr/Radarr.git
          git fetch upstream

      - name: Sync with Latest Radarr Master
        run: |
          git fetch --all
          git checkout -B master origin/master
          git merge --ff-only upstream/master || echo "Merge conflicts detected"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.PA_TOKEN }}

      - name: Merge Fix Branch (PR #9820)
        run: |
          git fetch upstream pull/9820/head:fix-remux-wrong-detection
          git merge fix-remux-wrong-detection --no-edit || echo "Merge conflicts detected"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.PA_TOKEN }}

    build_and_publish:
    needs: sync_and_merge
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Updated Code
        uses: actions/checkout@v4
        with:
          repository: ncsufan8628/radarr
          token: ${{ secrets.PA_TOKEN }}
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-8.0 jq

      - name: Build Radarr
        run: |
          git submodule update --init --recursive
          ./build.sh --target=linux-musl-x64
          ls -l ./bin/linux-musl-x64/Release/net8.0/publish

      - name: Prepare Docker Build Context
        run: |
          mkdir -p docker-build
          cp -r bin/linux-musl-x64/Release/net8.0/publish docker-build/Radarr

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/radarr:latest -f Dockerfile docker-build
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/radarr:latest ${{ secrets.DOCKERHUB_USERNAME }}/radarr:master

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/radarr:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/radarr:master
